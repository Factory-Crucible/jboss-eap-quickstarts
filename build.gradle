plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'org.jboss.as.quickstarts'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Database
    runtimeOnly 'com.h2database:h2'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Additional dependencies (adjust as needed)
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    archiveBaseName = 'spring-boot-kitchensink'
    archiveVersion = '0.1.0'
}

springBoot {
    mainClass = 'org.jboss.as.quickstarts.kitchensink.KitchensinkApplication'
}

// Enable annotation processing for Lombok if used
tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
}

// Configure Spring Boot DevTools for development (optional)
configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

// Additional Gradle configurations (if needed)
tasks.named('bootRun') {
    systemProperty 'spring.profiles.active', 'dev'
}

// Configure JaCoCo for code coverage (optional)
plugins.apply('jacoco')

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

test {
    finalizedBy jacocoTestReport
}